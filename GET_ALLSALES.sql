DROP PROCEDURE IF EXISTS GET_ALLSALES
GO

CREATE PROCEDURE GET_ALLSALES AS
BEGIN
    DECLARE @cur_SALEID BIGINT
    DECLARE @cur_CUSTID INT
    DECLARE @cur_PRODID INT
    DECLARE @cur_QTY INT
    DECLARE @cur_PRICE MONEY
    DECLARE @cur_SALEDATE DATE

    DECLARE SALE_CURSOR CURSOR FAST_FORWARD
    FOR
    SELECT SALEID, CUSTID, PRODID, QTY, PRICE, SALEDATE FROM dbo.SALE

    OPEN SALE_CURSOR

    FETCH NEXT FROM SALE_CURSOR into @cur_SALEID, @cur_CUSTID, @cur_PRODID, @cur_QTY, @cur_PRICE, @cur_SALEDATE;


    WHILE @@FETCH_STATUS = 0

    BEGIN TRY
        FETCH NEXT FROM SALE_CURSOR INTO @cur_SALEID, @cur_CUSTID, @cur_PRODID, @cur_QTY, @cur_PRICE, @cur_SALEDATE
        RETURN SELECT @cur_SALEID, @cur_CUSTID, @cur_PRODID, @cur_QTY, @cur_PRICE, @cur_SALEDATE
        -- return Concat(@cur_SALEID, @cur_CUSTID, @cur_PRODID, @cur_QTY, @cur_PRICE, @cur_SALEDATE)
    END TRY
    BEGIN CATCH
        DECLARE @ERRORMESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
        THROW 50000, @ERRORMESSAGE, 1
    END CATCH
END
GO
CLOSE SALE_CURSOR;
DEALLOCATE SALE_CURSOR;
GO


EXEC GET_ALLSALES