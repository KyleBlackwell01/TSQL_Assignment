DROP PROCEDURE IF EXISTS SUM_CUSTOMER_SALESYTD
GO

CREATE PROCEDURE SUM_CUSTOMER_SALESYTD AS
BEGIN
    BEGIN TRY
        DECLARE @Total int = (SELECT Sum(SALES_YTD) FROM CUSTOMER);
    END TRY
    BEGIN CATCH
        BEGIN
            DECLARE @ERRORMESSAGE NVARCHAR(MAX) = ERROR_MESSAGE();
            THROW 50000, @ERRORMESSAGE, 1
        END;
    END CATCH
    -- DECLARE @SALESYTD MONEY = (SELECT )


    RETURN @Total
END
GO

EXEC SUM_CUSTOMER_SALESYTD;

DROP FUNCTION IF EXISTS SUM_CUSTOMER_SALESYTDD
GO

CREATE FUNCTION SUM_CUSTOMER_SALESYTDD (@PSTATUS NVARCHAR) RETURNS INT AS
BEGIN
    DECLARE @Total INT = (SELECT SUM(SALES_YTD) FROM CUSTOMER)
    Return @Total
END;
GO

SELECT * FROM CUSTOMER

BEGIN
    SELECT dbo.SUM_CUSTOMER_SALESYTDD('OK');
END